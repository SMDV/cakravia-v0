name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        script: |
          # Navigate to application directory
          cd /opt/cakravia
          
          # Pull latest changes
          git pull origin main
          
          # Create environment file
          echo "NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}" > .env.production
          
          # Stop existing containers
          docker-compose down
          
          # Remove old images to save space
          docker image prune -f
          
          # Build and start new containers
          docker-compose build --no-cache
          docker-compose up -d
          
          # Wait for containers to be ready
          sleep 30
          
          # Check if containers are running
          docker-compose ps
          
          # Test health endpoint
          curl -f http://localhost:3000/api/health || exit 1
          
          echo "‚úÖ Deployment completed successfully!"

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "üéâ Deployment to cakravia.com successful!"
        else
          echo "‚ùå Deployment failed!"
          exit 1
        fi